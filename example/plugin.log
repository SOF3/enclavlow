BFS round 1
  [805 +305.714]     public void <init>()
                     {
                         io.github.sof3.enclavlow.example.Entry r0;
                 
                         r0 := @this: io.github.sof3.enclavlow.example.Entry;
                 
                         specialinvoke r0.<java.lang.Object: void <init>()>();
                 
                         return;
                     }
                 
  Analyzing <io.github.sof3.enclavlow.example.Entry: void <init>()>
    Copy
      [805 +311.741] control1 copyTo control7
    Node r0 := @this: io.github.sof3.enclavlow.example.Entry
      [805 +312.011] JIdentityStmt: r0 := @this: io.github.sof3.enclavlow.example.Entry
      [805 +312.101] Input: LocalFlow(control=control5, locals={}, params=[], calls=[], graph=
                     digraph DiGraph27054283 {
                     	0 [label = "this",color = "#def717"];
                     	1 [label = "static",color = "#abac43"];
                     	2 [label = "return",color = "#19071f"];
                     	3 [label = "throw",color = "#8210d0"];
                     	4 [label = "<source>",color = "#c520ad"];
                     	5 [label = "<sink>",color = "#f9766c"];
                     	6 [label = "control5",color = "#ac8603"];
                     }
                     )
      [805 +312.778] control5 copyTo control1
      [805 +314.386] lvalueNodesImpl(JimpleLocal r0)
      [805 +315.064] lvalueNodesImpl(JimpleLocal r0)
      [805 +315.920] lvalueNodesImpl(ThisRef @this: io.github.sof3.enclavlow.example.Entry)
      [805 +317.543] Output: [LocalFlow(control=control5, locals={r0=r0}, params=[], calls=[], graph=
                     digraph DiGraph588642676 {
                     	0 [label = "this",color = "#def717"];
                     	1 [label = "static",color = "#abac43"];
                     	2 [label = "return",color = "#19071f"];
                     	3 [label = "throw",color = "#8210d0"];
                     	4 [label = "<source>",color = "#c520ad"];
                     	5 [label = "<sink>",color = "#f9766c"];
                     	6 [label = "control5",color = "#ac8603"];
                     	7 [label = "r0",color = "#0e882b"];
                     	0 -> 7 [label = "assignment",style = "solid",color = "black"];
                     	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                     	7 -> 0 [label = "reference\nback flow",style = "dotted",color = "black"];
                     }
                     )]
      [805 +318.267] Branched Output: []
    Copy
      [805 +318.329] control5 copyTo control6
    Copy
      [805 +318.852] control3 copyTo control1
    Copy
      [805 +318.915] control5 copyTo control2
    Node specialinvoke r0.<java.lang.Object: void <init>()>()
      [805 +319.066] JInvokeStmt: specialinvoke r0.<java.lang.Object: void <init>()>()
      [805 +319.127] Input: LocalFlow(control=control5, locals={r0=r0}, params=[], calls=[], graph=
                     digraph DiGraph799295921 {
                     	0 [label = "this",color = "#def717"];
                     	1 [label = "static",color = "#abac43"];
                     	2 [label = "return",color = "#19071f"];
                     	3 [label = "throw",color = "#8210d0"];
                     	4 [label = "<source>",color = "#c520ad"];
                     	5 [label = "<sink>",color = "#f9766c"];
                     	6 [label = "control5",color = "#ac8603"];
                     	7 [label = "r0",color = "#0e882b"];
                     	0 -> 7 [label = "assignment",style = "solid",color = "black"];
                     	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                     	7 -> 0 [label = "reference\nback flow",style = "dotted",color = "black"];
                     }
                     )
      [805 +319.679] control5 copyTo control3
      [805 +321.638] Output: [LocalFlow(control=control5, locals={r0=r0}, params=[], calls=[FnCall(fn=java.lang.Object.void <init>(), params=[], thisNode=<java.lang.Object.void
                     <init>()>
                     this, returnNode=<java.lang.Object.void
                     <init>()>
                     return, throwNode=<java.lang.Object.void
                     <init>()>
                     throw, controlNode=<java.lang.Object.void
                     <init>()>
                     control)], graph=
                     digraph DiGraph1618268833 {
                     	0 [label = "this",color = "#def717"];
                     	1 [label = "static",color = "#abac43"];
                     	2 [label = "return",color = "#19071f"];
                     	3 [label = "throw",color = "#8210d0"];
                     	4 [label = "<source>",color = "#c520ad"];
                     	5 [label = "<sink>",color = "#f9766c"];
                     	6 [label = "control5",color = "#ac8603"];
                     	7 [label = "r0",color = "#0e882b"];
                     	8 [label = "<java.lang.Object.void
                     <init>()>
                     this",color = "#a6aa12"];
                     	9 [label = "<java.lang.Object.void
                     <init>()>
                     return",color = "#a6aa12"];
                     	10 [label = "<java.lang.Object.void
                     <init>()>
                     throw",color = "#a6aa12"];
                     	11 [label = "<java.lang.Object.void
                     <init>()>
                     control",color = "#a6aa12"];
                     	0 -> 7 [label = "assignment",style = "solid",color = "black"];
                     	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                     	6 -> 11 [label = "call condition",style = "solid",color = "black"];
                     	7 -> 0 [label = "reference\nback flow",style = "dotted",color = "black"];
                     	7 -> 8 [label = "call context",style = "solid",color = "black"];
                     }
                   ngModuleComponentRepository] Found cached version of changing module 'io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT' in 'MavenLocal'
2020-12-12T13:09:22.512+0800 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Using cached module metadata for module 'io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT' in 'MavenLocal'
2020-12-12T13:09:22.512+0800 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Using io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT from Maven repository 'MavenLocal'
2020-12-12T13:09:22.513+0800 [DEBUG] [org.gradle.internal.component.model.ComponentAttributeMatcher] Selected matches [io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT configuration runtime] from candidates [io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT configuration compile, io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT configuration runtime, io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT configuration platform-compile, io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT configuration platform-runtime, io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT configuration enforced-platform-compile, io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT configuration enforced-platform-runtime] for {org.gradle.dependency.bundling=external, org.gradle.jvm.version=14, org.gradle.libraryelements=jar, org.gradle.usage=java-runtime}
2020-12-12T13:09:22.513+0800 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.DependencyGraphBuilder] Visiting configuration io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT(runtime).
2020-12-12T13:09:22.541+0800 [DEBUG] [org.gradle.internal.component.model.ComponentAttributeMatcher] Selected match io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT configuration runtime from candidates [io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT configuration runtime] for {org.gradle.dependency.bundling=external, org.gradle.jvm.version=14, org.gradle.libraryelements=jar, org.gradle.usage=java-runtime}
2020-12-12T13:09:22.556+0800 [DEBUG] [org.gradle.internal.component.model.ComponentAttributeMatcher] Selected match io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT configuration runtime from candidates [io.github.sof3.enclavlow.plugin:io.github.sof3.enclavlow.plugin.gradle.plugin:1.0-SNAPSHOT configuration runtime] for {org.gradle.dependency.bundling=external, org.gradle.jvm.version=14, org.gradle.libraryelements=jar, org.gradle.usage=java-runtime}
2020-12-12T13:09:22.689+0800 [DEBUG] [org.gradle.internal.operations.DefaultBuildOperationExecutor] Build operation 'Apply plugin io.github.sof3.enclavlow.plugin to root project 'example'' started
2020-12-12T13:09:22.690+0800 [DEBUG] [org.gradle.internal.operations.DefaultBuildOperationExecutor] Completing Build operation 'Apply plugin io.github.sof3.enclavlow.plugin to root project 'example''
 Build operation 'Apply plugin io.github.sof3.enclavlow.plugin to root project 'example'' completed
 Computing AFG from [io.github.sof3.enclavlow.example.Entry]
 BFS round 1
   [805 +305.714]     public void <init>()
                      {
                          io.github.sof3.enclavlow.example.Entry r0;
                  
                          r0 := @this: io.github.sof3.enclavlow.example.Entry;
                  
                          specialinvoke r0.<java.lang.Object: void <init>()>();
                  
                          return;
                      }
                  
   Analyzing <io.github.sof3.enclavlow.example.Entry: void <init>()>
     Copy
       [805 +311.741] control1 copyTo control7
     Node r0 := @this: io.github.sof3.enclavlow.example.Entry
       [805 +312.011] JIdentityStmt: r0 := @this: io.github.sof3.enclavlow.example.Entry
       [805 +312.101] Input: LocalFlow(control=control5, locals={}, params=[], calls=[], graph=
                      digraph DiGraph27054283 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control5",color = "#ac8603"];
                      }
                      )
       [805 +312.778] control5 copyTo control1
       [805 +314.386] lvalueNodesImpl(JimpleLocal r0)
       [805 +315.064] lvalueNodesImpl(JimpleLocal r0)
       [805 +315.920] lvalueNodesImpl(ThisRef @this: io.github.sof3.enclavlow.example.Entry)
       [805 +317.543] Output: [LocalFlow(control=control5, locals={r0=r0}, params=[], calls=[], graph=
                      digraph DiGraph588642676 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control5",color = "#ac8603"];
                      	7 [label = "r0",color = "#0e882b"];
                      	0 -> 7 [label = "assignment",style = "solid",color = "black"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 0 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )]
       [805 +318.267] Branched Output: []
     Copy
       [805 +318.329] control5 copyTo control6
     Copy
       [805 +318.852] control3 copyTo control1
     Copy
       [805 +318.915] control5 copyTo control2
     Node specialinvoke r0.<java.lang.Object: void <init>()>()
       [805 +319.066] JInvokeStmt: specialinvoke r0.<java.lang.Object: void <init>()>()
       [805 +319.127] Input: LocalFlow(control=control5, locals={r0=r0}, params=[], calls=[], graph=
                      digraph DiGraph799295921 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control5",color = "#ac8603"];
                      	7 [label = "r0",color = "#0e882b"];
                      	0 -> 7 [label = "assignment",style = "solid",color = "black"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 0 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )
       [805 +319.679] control5 copyTo control3
       [805 +321.638] Output: [LocalFlow(control=control5, locals={r0=r0}, params=[], calls=[FnCall(fn=java.lang.Object.void <init>(), params=[], thisNode=<java.lang.Object.void
                      <init>()>
                      this, returnNode=<java.lang.Object.void
                      <init>()>
                      return, throwNode=<java.lang.Object.void
                      <init>()>
                      throw, controlNode=<java.lang.Object.void
                      <init>()>
                      control)], graph=
                      digraph DiGraph1618268833 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control5",color = "#ac8603"];
                      	7 [label = "r0",color = "#0e882b"];
                      	8 [label = "<java.lang.Object.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	9 [label = "<java.lang.Object.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	10 [label = "<java.lang.Object.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	11 [label = "<java.lang.Object.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	0 -> 7 [label = "assignment",style = "solid",color = "black"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	6 -> 11 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 0 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	7 -> 8 [label = "call context",style = "solid",color = "black"];
                      }
                      )]
       [805 +322.860] Branched Output: []
     Copy
       [805 +322.961] control5 copyTo control5
     Copy
       [805 +323.235] control5 copyTo control4
     Node return
       [805 +323.322] JReturnVoidStmt: return
       [805 +323.388] Input: LocalFlow(control=control5, locals={r0=r0}, params=[], calls=[FnCall(fn=java.lang.Object.void <init>(), params=[], thisNode=<java.lang.Object.void
                      <init>()>
                      this, returnNode=<java.lang.Object.void
                      <init>()>
                      return, throwNode=<java.lang.Object.void
                      <init>()>
                      throw, controlNode=<java.lang.Object.void
                      <init>()>
                      control)], graph=
                      digraph DiGraph1201118727 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control5",color = "#ac8603"];
                      	7 [label = "r0",color = "#0e882b"];
                      	8 [label = "<java.lang.Object.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	9 [label = "<java.lang.Object.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	10 [label = "<java.lang.Object.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	11 [label = "<java.lang.Object.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	0 -> 7 [label = "assignment",style = "solid",color = "black"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	6 -> 11 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 0 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	7 -> 8 [label = "call context",style = "solid",color = "black"];
                      }
                      )
       [805 +324.472] control5 copyTo control5
       Printing result LFG to dot
         [805 +325.229] Rendering graph: dot -T svg -o build/lfgOutput/io.github.sof3.enclavlow.example.Entry.void.init_0.dot.svg build/lfgOutput/io.github.sof3.enclavlow.example.Entry.void.init_0.dot
       [805 +359.198] Output: []
       [805 +359.282] Branched Output: []
   Contract of UNSPECIFIED void <init>()
     [805 +359.373] 
                    digraph DiGraph649697798 {
                    	0 [label = "this",color = "#def717"];
                    	1 [label = "static",color = "#abac43"];
                    	2 [label = "return",color = "#19071f"];
                    	3 [label = "throw",color = "#8210d0"];
                    	4 [label = "<source>",color = "#c520ad"];
                    	5 [label = "<sink>",color = "#f9766c"];
                    	6 [label = "methodCall",color = "#bb15d3"];
                    	7 [label = "<java.lang.Object.void
                    <init>()>
                    this",color = "#a6aa12"];
                    	8 [label = "<java.lang.Object.void
                    <init>()>
                    control",color = "#a6aa12"];
                    	0 -> 7 [style = "solid",color = "black"];
                    	6 -> 2 [style = "solid",color = "black"];
                    	6 -> 7 [style = "solid",color = "black"];
                    	6 -> 8 [style = "solid",color = "black"];
                    }
                    
   [805 +530.331]     public static void main(java.lang.String[])
                      {
                          spark.Route $r0;
                          java.lang.String[] r1;
                  
                          r1 := @parameter0: java.lang.String[];
                  
                          $r0 = staticinvoke <io.github.sof3.enclavlow.example.Entry$lambda_main_0__1: spark.Route bootstrap$()>();
                  
                          staticinvoke <spark.Spark: void get(java.lang.String,spark.Route)>("/sha512/:file", $r0);
                  
                          return;
                      }
                  
   Analyzing <io.github.sof3.enclavlow.example.Entry: void main(java.lang.String[])>
     Copy
       [805 +531.715] control9 copyTo control17
     Node r1 := @parameter0: java.lang.String[]
       [805 +531.862] JIdentityStmt: r1 := @parameter0: java.lang.String[]
       [805 +531.911] Input: LocalFlow(control=control15, locals={}, params=[param0], calls=[], graph=
                      digraph DiGraph43252833 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control15",color = "#ac8603"];
                      }
                      )
       [805 +532.195] control15 copyTo control9
       [805 +532.240] lvalueNodesImpl(JimpleLocal r1)
       [805 +532.275] lvalueNodesImpl(JimpleLocal r1)
       [805 +532.326] lvalueNodesImpl(ParameterRef @parameter0: java.lang.String[])
       [805 +532.380] Output: [LocalFlow(control=control15, locals={r1=r1}, params=[param0], calls=[], graph=
                      digraph DiGraph55555373 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control15",color = "#ac8603"];
                      	8 [label = "r1",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )]
       [805 +532.730] Branched Output: []
     Copy
       [805 +532.778] control15 copyTo control16
     Copy
       [805 +532.904] control11 copyTo control9
     Copy
       [805 +532.956] control15 copyTo control10
     Node $r0 = staticinvoke <io.github.sof3.enclavlow.example.Entry$lambda_main_0__1: spark.Route bootstrap$()>()
       [805 +533.068] JAssignStmt: $r0 = staticinvoke <io.github.sof3.enclavlow.example.Entry$lambda_main_0__1: spark.Route bootstrap$()>()
       [805 +533.127] Input: LocalFlow(control=control15, locals={r1=r1}, params=[param0], calls=[], graph=
                      digraph DiGraph1892101282 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control15",color = "#ac8603"];
                      	8 [label = "r1",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )
       [805 +533.642] control15 copyTo control11
       [805 +533.701] lvalueNodesImpl(JimpleLocal $r0)
       [805 +533.747] lvalueNodesImpl(JimpleLocal $r0)
       [805 +533.889] lvalueNodesImpl(JStaticInvokeExpr staticinvoke <io.github.sof3.enclavlow.example.Entry$lambda_main_0__1: spark.Route bootstrap$()>())
       [805 +533.960] Output: [LocalFlow(control=control15, locals={r1=r1, $r0=$r0}, params=[param0], calls=[FnCall(fn=io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route bootstrap$(), params=[], thisNode=null, returnNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      return, throwNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      throw, controlNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      control)], graph=
                      digraph DiGraph743177307 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control15",color = "#ac8603"];
                      	8 [label = "r1",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      return",color = "#a6aa12"];
                      	11 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      throw",color = "#a6aa12"];
                      	12 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      control",color = "#a6aa12"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 12 [label = "call condition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	10 -> 9 [label = "assignment",style = "solid",color = "black"];
                      }
                      )]
       [805 +534.755] Branched Output: []
     Copy
       [805 +534.808] control15 copyTo control15
     Copy
       [805 +534.958] control13 copyTo control11
     Copy
       [805 +535.010] control15 copyTo control12
     Node staticinvoke <spark.Spark: void get(java.lang.String,spark.Route)>("/sha512/:file", $r0)
       [805 +535.094] JInvokeStmt: staticinvoke <spark.Spark: void get(java.lang.String,spark.Route)>("/sha512/:file", $r0)
       [805 +535.138] Input: LocalFlow(control=control15, locals={r1=r1, $r0=$r0}, params=[param0], calls=[FnCall(fn=io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route bootstrap$(), params=[], thisNode=null, returnNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      return, throwNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      throw, controlNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      control)], graph=
                      digraph DiGraph69411681 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control15",color = "#ac8603"];
                      	8 [label = "r1",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      return",color = "#a6aa12"];
                      	11 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      throw",color = "#a6aa12"];
                      	12 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      control",color = "#a6aa12"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 12 [label = "call condition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	10 -> 9 [label = "assignment",style = "solid",color = "black"];
                      }
                      )
       [805 +535.850] control15 copyTo control13
       [805 +536.378] Output: [LocalFlow(control=control15, locals={r1=r1, $r0=$r0}, params=[param0], calls=[FnCall(fn=io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route bootstrap$(), params=[], thisNode=null, returnNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      return, throwNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      throw, controlNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      control), FnCall(fn=spark.Spark.void get(java.lang.String,spark.Route), params=[<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      param 0, <spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      param 1], thisNode=null, returnNode=<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      return, throwNode=<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      throw, controlNode=<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      control)], graph=
                      digraph DiGraph1693938916 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control15",color = "#ac8603"];
                      	8 [label = "r1",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      return",color = "#a6aa12"];
                      	11 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      throw",color = "#a6aa12"];
                      	12 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      control",color = "#a6aa12"];
                      	13 [label = "<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      param 0",color = "#a6aa12"];
                      	14 [label = "<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      param 1",color = "#a6aa12"];
                      	15 [label = "<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      return",color = "#a6aa12"];
                      	16 [label = "<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      throw",color = "#a6aa12"];
                      	17 [label = "<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      control",color = "#a6aa12"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 12 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 17 [label = "call condition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	9 -> 14 [label = "call param",style = "solid",color = "black"];
                      	10 -> 9 [label = "assignment",style = "solid",color = "black"];
                      }
                      )]
       [805 +538.003] Branched Output: []
     Copy
       [805 +538.092] control15 copyTo control15
     Copy
       [805 +538.348] control15 copyTo control14
     Node return
       [805 +538.436] JReturnVoidStmt: return
       [805 +538.479] Input: LocalFlow(control=control15, locals={r1=r1, $r0=$r0}, params=[param0], calls=[FnCall(fn=io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route bootstrap$(), params=[], thisNode=null, returnNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      return, throwNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      throw, controlNode=<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      control), FnCall(fn=spark.Spark.void get(java.lang.String,spark.Route), params=[<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      param 0, <spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      param 1], thisNode=null, returnNode=<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      return, throwNode=<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      throw, controlNode=<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      control)], graph=
                      digraph DiGraph2099630599 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control15",color = "#ac8603"];
                      	8 [label = "r1",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      return",color = "#a6aa12"];
                      	11 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      throw",color = "#a6aa12"];
                      	12 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                      bootstrap$()>
                      control",color = "#a6aa12"];
                      	13 [label = "<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      param 0",color = "#a6aa12"];
                      	14 [label = "<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      param 1",color = "#a6aa12"];
                      	15 [label = "<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      return",color = "#a6aa12"];
                      	16 [label = "<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      throw",color = "#a6aa12"];
                      	17 [label = "<spark.Spark.void
                      get(java.lang.String,spark.Route)>
                      control",color = "#a6aa12"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 12 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 17 [label = "call condition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	9 -> 14 [label = "call param",style = "solid",color = "black"];
                      	10 -> 9 [label = "assignment",style = "solid",color = "black"];
                      }
                      )
       [805 +539.682] control15 copyTo control15
       Printing result LFG to dot
         [805 +540.031] Rendering graph: dot -T svg -o build/lfgOutput/io.github.sof3.enclavlow.example.Entry.void.main.java.lang.String_0.dot.svg build/lfgOutput/io.github.sof3.enclavlow.example.Entry.void.main.java.lang.String_0.dot
       [805 +569.324] Searching ancestors of param0
       [805 +569.563] Output: []
       [805 +569.598] Branched Output: []
   Contract of UNSPECIFIED void main(java.lang.String[])
     [805 +569.670] 
                    digraph DiGraph1161397131 {
                    	0 [label = "this",color = "#def717"];
                    	1 [label = "static",color = "#abac43"];
                    	2 [label = "return",color = "#19071f"];
                    	3 [label = "throw",color = "#8210d0"];
                    	4 [label = "<source>",color = "#c520ad"];
                    	5 [label = "<sink>",color = "#f9766c"];
                    	6 [label = "param0",color = "#4800e4"];
                    	7 [label = "methodCall",color = "#bb15d3"];
                    	8 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                    bootstrap$()>
                    control",color = "#a6aa12"];
                    	9 [label = "<spark.Spark.void
                    get(java.lang.String,spark.Route)>
                    param 1",color = "#a6aa12"];
                    	10 [label = "<io.github.sof3.enclavlow.example.Entry$lambda_main_0__1.spark.Route
                    bootstrap$()>
                    return",color = "#a6aa12"];
                    	11 [label = "<spark.Spark.void
                    get(java.lang.String,spark.Route)>
                    control",color = "#a6aa12"];
                    	7 -> 2 [style = "solid",color = "black"];
                    	7 -> 8 [style = "solid",color = "black"];
                    	7 -> 9 [style = "solid",color = "black"];
                    	7 -> 11 [style = "solid",color = "black"];
                    	10 -> 9 [style = "solid",color = "black"];
                    }
                    
   [805 +742.174]     static byte[] getSecret()
                      {
                          byte[] $r0, $r2;
                          java.lang.Object $r1;
                  
                          $r0 = newarray (byte)[8];
                  
                          $r0[0] = 1;
                  
                          $r0[1] = 2;
                  
                          $r0[2] = 3;
                  
                          $r0[3] = 4;
                  
                          $r0[4] = 5;
                  
                          $r0[5] = 6;
                  
                          $r0[6] = 7;
                  
                          $r0[7] = 8;
                  
                          $r1 = staticinvoke <io.github.sof3.enclavlow.api.Enclavlow: java.lang.Object sourceMarker(java.lang.Object)>($r0);
                  
                          $r2 = (byte[]) $r1;
                  
                          return $r2;
                      }
                  
   Analyzing <io.github.sof3.enclavlow.example.Entry: byte[] getSecret()>
     Copy
       [805 +743.892] control19 copyTo control43
     Node $r0 = newarray (byte)[8]
       [805 +744.045] JAssignStmt: $r0 = newarray (byte)[8]
       [805 +744.095] Input: LocalFlow(control=control41, locals={}, params=[], calls=[], graph=
                      digraph DiGraph1113742757 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      }
                      )
       [805 +744.352] control41 copyTo control19
       [805 +744.394] lvalueNodesImpl(JimpleLocal $r0)
       [805 +744.427] lvalueNodesImpl(JimpleLocal $r0)
       [805 +744.505] lvalueNodesImpl(JNewArrayExpr newarray (byte)[8])
       [805 +744.548] Output: [LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph526976031 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )]
       [805 +744.859] Branched Output: []
     Copy
       [805 +744.908] control41 copyTo control42
     Copy
       [805 +745.029] control21 copyTo control19
     Copy
       [805 +745.082] control41 copyTo control20
     Node $r0[0] = 1
       [805 +745.153] JAssignStmt: $r0[0] = 1
       [805 +745.182] Input: LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph964082791 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )
       [805 +745.449] control41 copyTo control21
       [805 +745.493] lvalueNodesImpl(JArrayRef $r0[0])
       [805 +745.598] lvalueNodesImpl(JArrayRef $r0[0])
       [805 +745.678] lvalueNodesImpl(JimpleLocal $r0)
       [805 +745.761] lvalueNodesImpl(IntConstant 1)
       [805 +745.807] Output: [LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph1513024431 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )]
       [805 +746.140] Branched Output: []
     Copy
       [805 +746.247] control41 copyTo control41
     Copy
       [805 +746.462] control23 copyTo control21
     Copy
       [805 +746.524] control41 copyTo control22
     Node $r0[1] = 2
       [805 +746.593] JAssignStmt: $r0[1] = 2
       [805 +746.622] Input: LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph183573050 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )
       [805 +746.976] control41 copyTo control23
       [805 +747.048] lvalueNodesImpl(JArrayRef $r0[1])
       [805 +747.116] lvalueNodesImpl(JArrayRef $r0[1])
       [805 +747.148] lvalueNodesImpl(JimpleLocal $r0)
       [805 +747.197] lvalueNodesImpl(IntConstant 2)
       [805 +747.238] Output: [LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph1575988871 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )]
       [805 +747.610] Branched Output: []
     Copy
       [805 +747.702] control41 copyTo control41
     Copy
       [805 +747.920] control25 copyTo control23
     Copy
       [805 +747.978] control41 copyTo control24
     Node $r0[2] = 3
       [805 +748.066] JAssignStmt: $r0[2] = 3
       [805 +748.112] Input: LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph1366734041 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )
       [805 +748.474] control41 copyTo control25
       [805 +748.559] lvalueNodesImpl(JArrayRef $r0[2])
       [805 +748.654] lvalueNodesImpl(JArrayRef $r0[2])
       [805 +748.719] lvalueNodesImpl(JimpleLocal $r0)
       [805 +748.798] lvalueNodesImpl(IntConstant 3)
       [805 +748.863] Output: [LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph2083020491 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )]
       [805 +749.303] Branched Output: []
     Copy
       [805 +749.402] control41 copyTo control41
     Copy
       [805 +749.625] control27 copyTo control25
     Copy
       [805 +749.689] control41 copyTo control26
     Node $r0[3] = 4
       [805 +749.766] JAssignStmt: $r0[3] = 4
       [805 +749.799] Input: LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph2123021246 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )
       [805 +750.298] control41 copyTo control27
       [805 +750.407] lvalueNodesImpl(JArrayRef $r0[3])
       [805 +750.500] lvalueNodesImpl(JArrayRef $r0[3])
       [805 +750.560] lvalueNodesImpl(JimpleLocal $r0)
       [805 +750.644] lvalueNodesImpl(IntConstant 4)
       [805 +750.712] Output: [LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph1580312958 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )]
       [805 +751.239] Branched Output: []
     Copy
       [805 +751.315] control41 copyTo control41
     Copy
       [805 +751.527] control29 copyTo control27
     Copy
       [805 +751.603] control41 copyTo control28
     Node $r0[4] = 5
       [805 +751.670] JAssignStmt: $r0[4] = 5
       [805 +751.718] Input: LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph973413917 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )
       [805 +752.226] control41 copyTo control29
       [805 +752.304] lvalueNodesImpl(JArrayRef $r0[4])
       [805 +752.361] lvalueNodesImpl(JArrayRef $r0[4])
       [805 +752.398] lvalueNodesImpl(JimpleLocal $r0)
       [805 +752.447] lvalueNodesImpl(IntConstant 5)
       [805 +752.490] Output: [LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph82166160 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )]
       [805 +752.989] Branched Output: []
     Copy
       [805 +753.084] control41 copyTo control41
     Copy
       [805 +753.318] control31 copyTo control29
     Copy
       [805 +753.413] control41 copyTo control30
     Node $r0[5] = 6
       [805 +753.507] JAssignStmt: $r0[5] = 6
       [805 +753.556] Input: LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph790224377 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )
       [805 +754.042] control41 copyTo control31
       [805 +754.133] lvalueNodesImpl(JArrayRef $r0[5])
       [805 +754.207] lvalueNodesImpl(JArrayRef $r0[5])
       [805 +754.271] lvalueNodesImpl(JimpleLocal $r0)
       [805 +754.347] lvalueNodesImpl(IntConstant 6)
       [805 +754.408] Output: [LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph2083580733 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )]
       [805 +754.870] Branched Output: []
     Copy
       [805 +754.951] control41 copyTo control41
     Copy
       [805 +755.139] control33 copyTo control31
     Copy
       [805 +755.234] control41 copyTo control32
     Node $r0[6] = 7
       [805 +755.333] JAssignStmt: $r0[6] = 7
       [805 +755.386] Input: LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph1859647312 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )
       [805 +755.841] control41 copyTo control33
       [805 +755.901] lvalueNodesImpl(JArrayRef $r0[6])
       [805 +755.977] lvalueNodesImpl(JArrayRef $r0[6])
       [805 +756.023] lvalueNodesImpl(JimpleLocal $r0)
       [805 +756.088] lvalueNodesImpl(IntConstant 7)
       [805 +756.137] Output: [LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph1142178395 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )]
       [805 +756.463] Branched Output: []
     Copy
       [805 +756.520] control41 copyTo control41
     Copy
       [805 +756.679] control35 copyTo control33
     Copy
       [805 +756.780] control41 copyTo control34
     Node $r0[7] = 8
       [805 +756.864] JAssignStmt: $r0[7] = 8
       [805 +756.896] Input: LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph629389621 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )
       [805 +757.209] control41 copyTo control35
       [805 +757.287] lvalueNodesImpl(JArrayRef $r0[7])
       [805 +757.334] lvalueNodesImpl(JArrayRef $r0[7])
       [805 +757.367] lvalueNodesImpl(JimpleLocal $r0)
       [805 +757.414] lvalueNodesImpl(IntConstant 8)
       [805 +757.453] Output: [LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph1586612155 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )]
       [805 +757.763] Branched Output: []
     Copy
       [805 +757.823] control41 copyTo control41
     Copy
       [805 +757.999] control37 copyTo control35
     Copy
       [805 +758.093] control41 copyTo control36
     Node $r1 = staticinvoke <io.github.sof3.enclavlow.api.Enclavlow: java.lang.Object sourceMarker(java.lang.Object)>($r0)
       [805 +758.248] JAssignStmt: $r1 = staticinvoke <io.github.sof3.enclavlow.api.Enclavlow: java.lang.Object sourceMarker(java.lang.Object)>($r0)
       [805 +758.328] Input: LocalFlow(control=control41, locals={$r0=$r0}, params=[], calls=[], graph=
                      digraph DiGraph263046734 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )
       [805 +758.769] control41 copyTo control37
       [805 +758.820] lvalueNodesImpl(JimpleLocal $r1)
       [805 +758.859] lvalueNodesImpl(JimpleLocal $r1)
       [805 +758.966] lvalueNodesImpl(JStaticInvokeExpr staticinvoke <io.github.sof3.enclavlow.api.Enclavlow: java.lang.Object sourceMarker(java.lang.Object)>($r0))
       [805 +759.038] Output: [LocalFlow(control=control41, locals={$r0=$r0, $r1=$r1}, params=[], calls=[], graph=
                      digraph DiGraph1775061882 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	8 [label = "$r1",color = "#0e882b"];
                      	4 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	6 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )]
       [805 +759.405] Branched Output: []
     Copy
       [805 +759.457] control41 copyTo control41
     Copy
       [805 +759.587] control39 copyTo control37
     Copy
       [805 +759.643] control41 copyTo control38
     Node $r2 = (byte[]) $r1
       [805 +759.719] JAssignStmt: $r2 = (byte[]) $r1
       [805 +759.751] Input: LocalFlow(control=control41, locals={$r0=$r0, $r1=$r1}, params=[], calls=[], graph=
                      digraph DiGraph1363086695 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	8 [label = "$r1",color = "#0e882b"];
                      	4 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	6 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )
       [805 +760.105] control41 copyTo control39
       [805 +760.146] lvalueNodesImpl(JimpleLocal $r2)
       [805 +760.181] lvalueNodesImpl(JimpleLocal $r2)
       [805 +760.244] lvalueNodesImpl(JCastExpr (byte[]) $r1)
       [805 +760.288] lvalueNodesImpl(JimpleLocal $r1)
       [805 +760.333] Output: [LocalFlow(control=control41, locals={$r0=$r0, $r1=$r1, $r2=$r2}, params=[], calls=[], graph=
                      digraph DiGraph29603044 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	8 [label = "$r1",color = "#0e882b"];
                      	9 [label = "$r2",color = "#0e882b"];
                      	4 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	6 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	6 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 9 [label = "assignment",style = "solid",color = "black"];
                      	9 -> 8 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )]
       [805 +760.788] Branched Output: []
     Copy
       [805 +760.841] control41 copyTo control41
     Copy
       [805 +760.966] control41 copyTo control40
     Node return $r2
       [805 +761.040] JReturnStmt: return $r2
       [805 +761.072] Input: LocalFlow(control=control41, locals={$r0=$r0, $r1=$r1, $r2=$r2}, params=[], calls=[], graph=
                      digraph DiGraph1623039268 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "control41",color = "#ac8603"];
                      	7 [label = "$r0",color = "#0e882b"];
                      	8 [label = "$r1",color = "#0e882b"];
                      	9 [label = "$r2",color = "#0e882b"];
                      	4 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	6 -> 7 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	6 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	6 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 9 [label = "assignment",style = "solid",color = "black"];
                      	9 -> 8 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )
       [805 +761.563] control41 copyTo control41
       Printing result LFG to dot
         [805 +761.886] Rendering graph: dot -T svg -o build/lfgOutput/io.github.sof3.enclavlow.example.Entry.byte.getSecret_0.dot.svg build/lfgOutput/io.github.sof3.enclavlow.example.Entry.byte.getSecret_0.dot
       [805 +794.295] Output: []
       [805 +794.402] Branched Output: []
   Contract of UNSPECIFIED byte[] getSecret()
     [805 +794.501] 
                    digraph DiGraph1671990482 {
                    	0 [label = "this",color = "#def717"];
                    	1 [label = "static",color = "#abac43"];
                    	2 [label = "return",color = "#19071f"];
                    	3 [label = "throw",color = "#8210d0"];
                    	4 [label = "<source>",color = "#c520ad"];
                    	5 [label = "<sink>",color = "#f9766c"];
                    	6 [label = "methodCall",color = "#bb15d3"];
                    	4 -> 2 [style = "solid",color = "black"];
                    	6 -> 2 [style = "solid",color = "black"];
                    }
                    
    readFile(java.io.File) throws java.io.IOException
                      {
                          java.io.ByteArrayOutputStream $r0, r1;
                          java.io.FileInputStream $r2, r4;
                          java.io.File r3;
                          byte[] $r5;
                          java.lang.Throwable $r6, r7, r8, $r9;
                  
                          r3 := @parameter0: java.io.File;
                  
                          $r0 = new java.io.ByteArrayOutputStream;
                  
                          specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();
                  
                          r1 = $r0;
                  
                          $r2 = new java.io.FileInputStream;
                  
                          specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r3);
                  
                          r4 = $r2;
                  
                       label1:
                          virtualinvoke r4.<java.io.FileInputStream: long transferTo(java.io.OutputStream)>(r1);
                  
                       label2:
                          virtualinvoke r4.<java.io.FileInputStream: void close()>();
                  
                          goto label8;
                  
                       label3:
                          $r9 := @caughtexception;
                  
                          r8 = $r9;
                  
                       label4:
                          virtualinvoke r4.<java.io.FileInputStream: void close()>();
                  
                       label5:
                          goto label7;
                  
                       label6:
                          $r6 := @caughtexception;
                  
                          r7 = $r6;
                  
                          virtualinvoke r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r7);
                  
                       label7:
                          throw r8;
                  
                       label8:
                          $r5 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
                  
                          return $r5;
                  
                          catch java.lang.Throwable from label1 to label2 with label3;
                          catch java.lang.Throwable from label4 to label5 with label6;
                      }
                  
   Analyzing <io.github.sof3.enclavlow.example.Entry: byte[] readFile(java.io.File)>
     Copy
       [805 +964.951] control45 copyTo control85
     Node r3 := @parameter0: java.io.File
       [805 +965.041] JIdentityStmt: r3 := @parameter0: java.io.File
       [805 +965.071] Input: LocalFlow(control=control82, locals={}, params=[param0], calls=[], graph=
                      digraph DiGraph1873286174 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      }
                      )
       [805 +965.306] control82 copyTo control45
       [805 +965.344] lvalueNodesImpl(JimpleLocal r3)
       [805 +965.386] lvalueNodesImpl(JimpleLocal r3)
       [805 +965.428] lvalueNodesImpl(ParameterRef @parameter0: java.io.File)
       [805 +965.469] Output: [LocalFlow(control=control82, locals={r3=r3}, params=[param0], calls=[], graph=
                      digraph DiGraph586112513 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )]
       [805 +965.785] Branched Output: []
     Copy
       [805 +965.829] control82 copyTo control83
     Copy
       [805 +965.946] control47 copyTo control45
     Copy
       [805 +965.994] control82 copyTo control46
     Node $r0 = new java.io.ByteArrayOutputStream
       [805 +966.067] JAssignStmt: $r0 = new java.io.ByteArrayOutputStream
       [805 +966.094] Input: LocalFlow(control=control82, locals={r3=r3}, params=[param0], calls=[], graph=
                      digraph DiGraph305641586 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )
       [805 +966.461] control82 copyTo control47
       [805 +966.502] lvalueNodesImpl(JimpleLocal $r0)
       [805 +966.541] lvalueNodesImpl(JimpleLocal $r0)
       [805 +966.581] lvalueNodesImpl(JNewExpr new java.io.ByteArrayOutputStream)
       [805 +966.620] Output: [LocalFlow(control=control82, locals={r3=r3, $r0=$r0}, params=[param0], calls=[], graph=
                      digraph DiGraph98209469 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )]
       [805 +967.000] Branched Output: []
     Copy
       [805 +967.046] control82 copyTo control82
     Copy
       [805 +967.212] control49 copyTo control47
     Copy
       [805 +967.276] control82 copyTo control48
     Node specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>()
       [805 +967.346] JInvokeStmt: specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>()
       [805 +967.382] Input: LocalFlow(control=control82, locals={r3=r3, $r0=$r0}, params=[param0], calls=[], graph=
                      digraph DiGraph721249020 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )
       [805 +967.749] control82 copyTo control49
       [805 +967.854] Output: [LocalFlow(control=control82, locals={r3=r3, $r0=$r0}, params=[param0], calls=[FnCall(fn=java.io.ByteArrayOutputStream.void <init>(), params=[], thisNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this, returnNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return, throwNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw, controlNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control)], graph=
                      digraph DiGraph1851432383 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	11 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	12 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	13 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 13 [label = "call condition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	9 -> 10 [label = "call context",style = "solid",color = "black"];
                      }
                      )]
       [805 +968.568] Branched Output: []
     Copy
       [805 +968.614] control82 copyTo control82
     Copy
       [805 +968.769] control51 copyTo control49
     Copy
       [805 +968.819] control82 copyTo control50
     Node r1 = $r0
       [805 +968.868] JAssignStmt: r1 = $r0
       [805 +968.894] Input: LocalFlow(control=control82, locals={r3=r3, $r0=$r0}, params=[param0], calls=[FnCall(fn=java.io.ByteArrayOutputStream.void <init>(), params=[], thisNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this, returnNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return, throwNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw, controlNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control)], graph=
                      digraph DiGraph1007563321 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	11 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	12 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	13 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 13 [label = "call condition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	9 -> 10 [label = "call context",style = "solid",color = "black"];
                      }
                      )
       [805 +969.605] control82 copyTo control51
       [805 +969.643] lvalueNodesImpl(JimpleLocal r1)
       [805 +969.675] lvalueNodesImpl(JimpleLocal r1)
       [805 +969.714] lvalueNodesImpl(JimpleLocal $r0)
       [805 +969.760] Output: [LocalFlow(control=control82, locals={r3=r3, $r0=$r0, r1=r1}, params=[param0], calls=[FnCall(fn=java.io.ByteArrayOutputStream.void <init>(), params=[], thisNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this, returnNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return, throwNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw, controlNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control)], graph=
                      digraph DiGraph1225818360 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	11 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	12 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	13 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	14 [label = "r1",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 13 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 14 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	9 -> 10 [label = "call context",style = "solid",color = "black"];
                      	9 -> 14 [label = "assignment",style = "solid",color = "black"];
                      	14 -> 9 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )]
       [805 +970.551] Branched Output: []
     Copy
       [805 +970.598] control82 copyTo control82
     Copy
       [805 +970.752] control53 copyTo control51
     Copy
       [805 +970.801] control82 copyTo control52
     Node $r2 = new java.io.FileInputStream
       [805 +970.859] JAssignStmt: $r2 = new java.io.FileInputStream
       [805 +970.885] Input: LocalFlow(control=control82, locals={r3=r3, $r0=$r0, r1=r1}, params=[param0], calls=[FnCall(fn=java.io.ByteArrayOutputStream.void <init>(), params=[], thisNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this, returnNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return, throwNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw, controlNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control)], graph=
                      digraph DiGraph644893174 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	11 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	12 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	13 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	14 [label = "r1",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 13 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 14 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	9 -> 10 [label = "call context",style = "solid",color = "black"];
                      	9 -> 14 [label = "assignment",style = "solid",color = "black"];
                      	14 -> 9 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )
       [805 +971.669] control82 copyTo control53
       [805 +971.720] lvalueNodesImpl(JimpleLocal $r2)
       [805 +971.751] lvalueNodesImpl(JimpleLocal $r2)
       [805 +971.788] lvalueNodesImpl(JNewExpr new java.io.FileInputStream)
       [805 +971.820] Output: [LocalFlow(control=control82, locals={r3=r3, $r0=$r0, r1=r1, $r2=$r2}, params=[param0], calls=[FnCall(fn=java.io.ByteArrayOutputStream.void <init>(), params=[], thisNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this, returnNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return, throwNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw, controlNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control)], graph=
                      digraph DiGraph477990882 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	11 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	12 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	13 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	14 [label = "r1",color = "#0e882b"];
                      	15 [label = "$r2",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 13 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 14 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 15 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	9 -> 10 [label = "call context",style = "solid",color = "black"];
                      	9 -> 14 [label = "assignment",style = "solid",color = "black"];
                      	14 -> 9 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )]
       [805 +972.654] Branched Output: []
     Copy
       [805 +972.699] control82 copyTo control82
     Copy
       [805 +972.869] control55 copyTo control53
     Copy
       [805 +972.918] control82 copyTo control54
     Node specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r3)
       [805 +972.988] JInvokeStmt: specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r3)
       [805 +973.023] Input: LocalFlow(control=control82, locals={r3=r3, $r0=$r0, r1=r1, $r2=$r2}, params=[param0], calls=[FnCall(fn=java.io.ByteArrayOutputStream.void <init>(), params=[], thisNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this, returnNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return, throwNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw, controlNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control)], graph=
                      digraph DiGraph1370483118 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	11 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	12 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	13 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	14 [label = "r1",color = "#0e882b"];
                      	15 [label = "$r2",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 13 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 14 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 15 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	9 -> 10 [label = "call context",style = "solid",color = "black"];
                      	9 -> 14 [label = "assignment",style = "solid",color = "black"];
                      	14 -> 9 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )
       [805 +973.850] control82 copyTo control55
       [805 +973.974] Output: [LocalFlow(control=control82, locals={r3=r3, $r0=$r0, r1=r1, $r2=$r2}, params=[param0], calls=[FnCall(fn=java.io.ByteArrayOutputStream.void <init>(), params=[], thisNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this, returnNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return, throwNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw, controlNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control), FnCall(fn=java.io.FileInputStream.void <init>(java.io.File), params=[<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      param 0], thisNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      this, returnNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      return, throwNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      throw, controlNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      control)], graph=
                      digraph DiGraph471725462 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	11 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	12 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	13 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	14 [label = "r1",color = "#0e882b"];
                      	15 [label = "$r2",color = "#0e882b"];
                      	16 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      param 0",color = "#a6aa12"];
                      	17 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      this",color = "#a6aa12"];
                      	18 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      return",color = "#a6aa12"];
                      	19 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      throw",color = "#a6aa12"];
                      	20 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      control",color = "#a6aa12"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 13 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 14 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 15 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 20 [label = "call condition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	8 -> 16 [label = "call param",style = "solid",color = "black"];
                      	9 -> 10 [label = "call context",style = "solid",color = "black"];
                      	9 -> 14 [label = "assignment",style = "solid",color = "black"];
                      	14 -> 9 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	15 -> 17 [label = "call context",style = "solid",color = "black"];
                      }
                      )]
       [805 +975.276] Branched Output: []
     Copy
       [805 +975.322] control82 copyTo control82
     Copy
       [805 +975.519] control57 copyTo control55
     Copy
       [805 +975.569] control82 copyTo control56
     Node r4 = $r2
       [805 +975.619] JAssignStmt: r4 = $r2
       [805 +975.644] Input: LocalFlow(control=control82, locals={r3=r3, $r0=$r0, r1=r1, $r2=$r2}, params=[param0], calls=[FnCall(fn=java.io.ByteArrayOutputStream.void <init>(), params=[], thisNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this, returnNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return, throwNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw, controlNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control), FnCall(fn=java.io.FileInputStream.void <init>(java.io.File), params=[<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      param 0], thisNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      this, returnNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      return, throwNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      throw, controlNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      control)], graph=
                      digraph DiGraph863002556 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	11 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	12 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	13 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	14 [label = "r1",color = "#0e882b"];
                      	15 [label = "$r2",color = "#0e882b"];
                      	16 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      param 0",color = "#a6aa12"];
                      	17 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      this",color = "#a6aa12"];
                      	18 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      return",color = "#a6aa12"];
                      	19 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      throw",color = "#a6aa12"];
                      	20 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      control",color = "#a6aa12"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 13 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 14 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 15 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 20 [label = "call condition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	8 -> 16 [label = "call param",style = "solid",color = "black"];
                      	9 -> 10 [label = "call context",style = "solid",color = "black"];
                      	9 -> 14 [label = "assignment",style = "solid",color = "black"];
                      	14 -> 9 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	15 -> 17 [label = "call context",style = "solid",color = "black"];
                      }
                      )
       [805 +976.926] control82 copyTo control57
       [805 +976.967] lvalueNodesImpl(JimpleLocal r4)
       [805 +976.999] lvalueNodesImpl(JimpleLocal r4)
       [805 +977.051] lvalueNodesImpl(JimpleLocal $r2)
       [805 +977.087] Output: [LocalFlow(control=control82, locals={r3=r3, $r0=$r0, r1=r1, $r2=$r2, r4=r4}, params=[param0], calls=[FnCall(fn=java.io.ByteArrayOutputStream.void <init>(), params=[], thisNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this, returnNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return, throwNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw, controlNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control), FnCall(fn=java.io.FileInputStream.void <init>(java.io.File), params=[<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      param 0], thisNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      this, returnNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      return, throwNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      throw, controlNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      control)], graph=
                      digraph DiGraph1359867661 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	11 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	12 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	13 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	14 [label = "r1",color = "#0e882b"];
                      	15 [label = "$r2",color = "#0e882b"];
                      	16 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      param 0",color = "#a6aa12"];
                      	17 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      this",color = "#a6aa12"];
                      	18 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      return",color = "#a6aa12"];
                      	19 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      throw",color = "#a6aa12"];
                      	20 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      control",color = "#a6aa12"];
                      	21 [label = "r4",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 13 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 14 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 15 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 20 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 21 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	8 -> 16 [label = "call param",style = "solid",color = "black"];
                      	9 -> 10 [label = "call context",style = "solid",color = "black"];
                      	9 -> 14 [label = "assignment",style = "solid",color = "black"];
                      	14 -> 9 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	15 -> 17 [label = "call context",style = "solid",color = "black"];
                      	15 -> 21 [label = "assignment",style = "solid",color = "black"];
                      	21 -> 15 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )]
       [805 +978.451] Branched Output: []
     Copy
       [805 +978.498] control82 copyTo control82
     Copy
       [805 +978.713] control59 copyTo control57
     Copy
       [805 +978.761] control82 copyTo control58
     Node virtualinvoke r4.<java.io.FileInputStream: long transferTo(java.io.OutputStream)>(r1)
       [805 +978.857] JInvokeStmt: virtualinvoke r4.<java.io.FileInputStream: long transferTo(java.io.OutputStream)>(r1)
       [805 +978.893] Input: LocalFlow(control=control82, locals={r3=r3, $r0=$r0, r1=r1, $r2=$r2, r4=r4}, params=[param0], calls=[FnCall(fn=java.io.ByteArrayOutputStream.void <init>(), params=[], thisNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this, returnNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return, throwNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw, controlNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control), FnCall(fn=java.io.FileInputStream.void <init>(java.io.File), params=[<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      param 0], thisNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      this, returnNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      return, throwNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      throw, controlNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      control)], graph=
                      digraph DiGraph690837738 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	11 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	12 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	13 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	14 [label = "r1",color = "#0e882b"];
                      	15 [label = "$r2",color = "#0e882b"];
                      	16 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      param 0",color = "#a6aa12"];
                      	17 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      this",color = "#a6aa12"];
                      	18 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      return",color = "#a6aa12"];
                      	19 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      throw",color = "#a6aa12"];
                      	20 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      control",color = "#a6aa12"];
                      	21 [label = "r4",color = "#0e882b"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 13 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 14 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 15 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 20 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 21 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	8 -> 16 [label = "call param",style = "solid",color = "black"];
                      	9 -> 10 [label = "call context",style = "solid",color = "black"];
                      	9 -> 14 [label = "assignment",style = "solid",color = "black"];
                      	14 -> 9 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	15 -> 17 [label = "call context",style = "solid",color = "black"];
                      	15 -> 21 [label = "assignment",style = "solid",color = "black"];
                      	21 -> 15 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )
       [805 +980.292] control82 copyTo control59
       [805 +980.527] Output: [LocalFlow(control=control82, locals={r3=r3, $r0=$r0, r1=r1, $r2=$r2, r4=r4}, params=[param0], calls=[FnCall(fn=java.io.ByteArrayOutputStream.void <init>(), params=[], thisNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this, returnNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return, throwNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw, controlNode=<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control), FnCall(fn=java.io.FileInputStream.void <init>(java.io.File), params=[<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      param 0], thisNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      this, returnNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      return, throwNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      throw, controlNode=<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      control), FnCall(fn=java.io.InputStream.long transferTo(java.io.OutputStream), params=[<java.io.InputStream.long
                      transferTo(java.io.OutputStream)>
                      param 0], thisNode=<java.io.InputStream.long
                      transferTo(java.io.OutputStream)>
                      this, returnNode=<java.io.InputStream.long
                      transferTo(java.io.OutputStream)>
                      return, throwNode=<java.io.InputStream.long
                      transferTo(java.io.OutputStream)>
                      throw, controlNode=<java.io.InputStream.long
                      transferTo(java.io.OutputStream)>
                      control)], graph=
                      digraph DiGraph1175956628 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control82",color = "#ac8603"];
                      	8 [label = "r3",color = "#0e882b"];
                      	9 [label = "$r0",color = "#0e882b"];
                      	10 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      this",color = "#a6aa12"];
                      	11 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      return",color = "#a6aa12"];
                      	12 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      throw",color = "#a6aa12"];
                      	13 [label = "<java.io.ByteArrayOutputStream.void
                      <init>()>
                      control",color = "#a6aa12"];
                      	14 [label = "r1",color = "#0e882b"];
                      	15 [label = "$r2",color = "#0e882b"];
                      	16 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      param 0",color = "#a6aa12"];
                      	17 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      this",color = "#a6aa12"];
                      	18 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      return",color = "#a6aa12"];
                      	19 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      throw",color = "#a6aa12"];
                      	20 [label = "<java.io.FileInputStream.void
                      <init>(java.io.File)>
                      control",color = "#a6aa12"];
                      	21 [label = "r4",color = "#0e882b"];
                      	22 [label = "<java.io.InputStream.long
                      transferTo(java.io.OutputStream)>
                      param 0",color = "#a6aa12"];
                      	23 [label = "<java.io.InputStream.long
                      transferTo(java.io.OutputStream)>
                      this",color = "#a6aa12"];
                      	24 [label = "<java.io.InputStream.long
                      transferTo(java.io.OutputStream)>
                      return",color = "#a6aa12"];
                      	25 [label = "<java.io.InputStream.long
                      transferTo(java.io.OutputStream)>
                      throw",color = "#a6aa12"];
                      	26 [label = "<java.io.InputStream.long
                      transferTo(java.io.OutputStream)>
                      control",color = "#a6aa12"];
                      	6 -> 8 [label = "assignment",style = "solid",color = "black"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 13 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 14 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 15 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 20 [label = "call condition",style = "solid",color = "black"];
                      	7 -> 21 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 26 [label = "call condition",style = "solid",color = "black"];
                      	8 -> 6 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	8 -> 16 [label = "call param",style = "solid",color = "black"];
                      	9 -> 10 [label = "call context",style = "solid",color = "black"];
                      	9 -> 14 [label = "assignment",style = "solid",color = "black"];
                      	14 -> 9 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	14 -> 22 [label = "call param",style = "solid",color = "black"];
                      	15 -> 17 [label = "call context",style = "solid",color = "black"];
                      	15 -> 21 [label = "assignment",style = "solid",color = "black"];
                      	21 -> 15 [label = "reference\nback flow",style = "dotted",color = "black"];
                      	21 -> 23 [label = "call context",style = "solid",color = "black"];
                      }
                      )]
       [805 +982.445] Branched Output: []
     Copy
       [805 +982.509] control82 copyTo control82
     Copy
       [805 +982.831] control65 copyTo control59
     Node $r9 := @caughtexception
       [805 +982.899] JIdentityStmt: $r9 := @caughtexception
       [805 +982.926] Input: LocalFlow(control=control64, locals={}, params=[param0], calls=[], graph=
                      digraph DiGraph1348775435 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control64",color = "#ac8603"];
                      }
                      )
       [805 +983.170] control64 copyTo control65
       [805 +983.221] lvalueNodesImpl(JimpleLocal $r9)
       [805 +983.255] lvalueNodesImpl(JimpleLocal $r9)
       [805 +983.293] lvalueNodesImpl(JCaughtExceptionRef @caughtexception)
       [805 +983.330] Output: [LocalFlow(control=control64, locals={$r9=$r9}, params=[param0], calls=[], graph=
                      digraph DiGraph1257289211 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control64",color = "#ac8603"];
                      	8 [label = "$r9",color = "#0e882b"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )]
       [805 +983.630] Branched Output: []
     Copy
       [805 +983.695] control64 copyTo control82
     Copy
       [805 +983.816] control67 copyTo control65
     Copy
       [805 +983.864] control64 copyTo control66
     Node r8 = $r9
       [805 +983.914] JAssignStmt: r8 = $r9
       [805 +983.939] Input: LocalFlow(control=control64, locals={$r9=$r9}, params=[param0], calls=[], graph=
                      digraph DiGraph1889578286 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control64",color = "#ac8603"];
                      	8 [label = "$r9",color = "#0e882b"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      }
                      )
       [805 +984.202] control64 copyTo control67
       [805 +984.236] lvalueNodesImpl(JimpleLocal r8)
       [805 +984.264] lvalueNodesImpl(JimpleLocal r8)
       [805 +984.300] lvalueNodesImpl(JimpleLocal $r9)
       [805 +984.336] Output: [LocalFlow(control=control64, locals={$r9=$r9, r8=r8}, params=[param0], calls=[], graph=
                      digraph DiGraph187223202 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control64",color = "#ac8603"];
                      	8 [label = "$r9",color = "#0e882b"];
                      	9 [label = "r8",color = "#0e882b"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 9 [label = "assignment",style = "solid",color = "black"];
                      	9 -> 8 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )]
       [805 +984.683] Branched Output: []
     Copy
       [805 +984.738] control64 copyTo control64
     Copy
       [805 +984.862] control69 copyTo control67
     Copy
       [805 +984.910] control64 copyTo control68
     Node virtualinvoke r4.<java.io.FileInputStream: void close()>()
       [805 +984.976] JInvokeStmt: virtualinvoke r4.<java.io.FileInputStream: void close()>()
       [805 +985.008] Input: LocalFlow(control=control64, locals={$r9=$r9, r8=r8}, params=[param0], calls=[], graph=
                      digraph DiGraph2127114042 {
                      	0 [label = "this",color = "#def717"];
                      	1 [label = "static",color = "#abac43"];
                      	2 [label = "return",color = "#19071f"];
                      	3 [label = "throw",color = "#8210d0"];
                      	4 [label = "<source>",color = "#c520ad"];
                      	5 [label = "<sink>",color = "#f9766c"];
                      	6 [label = "param0",color = "#4800e4"];
                      	7 [label = "control64",color = "#ac8603"];
                      	8 [label = "$r9",color = "#0e882b"];
                      	9 [label = "r8",color = "#0e882b"];
                      	7 -> 8 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	7 -> 9 [label = "assignment\ncondition",style = "solid",color = "black"];
                      	8 -> 9 [label = "assignment",style = "solid",color = "black"];
                      	9 -> 8 [label = "reference\nback flow",style = "dotted",color = "black"];
                      }
                      )
       [805 +985.358] control64 copyTo control69
 
 FAILURE: Build failed with an exception.
 
 * What went wrong:
 Execution failed for task ':enclavlow'.
 > rvalue variable r4 should appear as an lvalue first
 
 * Try:
  Run with --scan to get full insights.
 
 * Exception is:
 org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':enclavlow'.
 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1(ExecuteActionsTaskExecuter.java:205)
 	at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:263)
 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:203)
 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:184)
 	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:114)
 	at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)
 	at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:62)
 	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)
 	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)
 	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)
 	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)
 	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)
 	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:416)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:406)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:102)
 	at org.gradle.internal.operations.DelegatingBuildOperationExecutor.call(DelegatingBuildOperationExecutor.java:36)
 	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)
 	at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:41)
 	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:372)
 	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:359)
 	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:352)
 	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:338)
 	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)
 	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)
 	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)
 	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)
 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
 	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
 Caused by: java.lang.IllegalArgumentException: rvalue variable r4 should appear as an lvalue first
 	at io.github.sof3.enclavlow.local.Value2nodesKt$rvalueNodesSeq$1.invokeSuspend(value2nodes.kt:47)
 	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
 	at kotlin.sequences.SequenceBuilderIterator.hasNext(SequenceBuilder.kt:140)
 	at kotlin.sequences.SequencesKt___SequencesKt.toCollection(_Sequences.kt:716)
 	at kotlin.sequences.SequencesKt___SequencesKt.toSet(_Sequences.kt:757)
 	at io.github.sof3.enclavlow.local.Value2nodesKt.rvalueNodes(value2nodes.kt:38)
 	at io.github.sof3.enclavlow.local.Value2nodesKt$rvalueNodesSeq$1.invokeSuspend(value2nodes.kt:118)
 	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
 	at kotlin.sequences.SequenceBuilderIterator.hasNext(SequenceBuilder.kt:140)
 	at kotlin.sequences.SequencesKt___SequencesKt.toCollection(_Sequences.kt:716)
 	at kotlin.sequences.SequencesKt___SequencesKt.toSet(_Sequences.kt:757)
 	at io.github.sof3.enclavlow.local.Value2nodesKt.rvalueNodes(value2nodes.kt:38)
 	at io.github.sof3.enclavlow.local.SenFlow.flowThrough(local.kt:178)
 	at io.github.sof3.enclavlow.local.SenFlow.flowThrough(local.kt:42)
 	at soot.toolkits.scalar.ForwardBranchedFlowAnalysis.doAnalysis(ForwardBranchedFlowAnalysis.java:243)
 	at io.github.sof3.enclavlow.local.SenFlow.doAnalysis(local.kt:103)
 	at io.github.sof3.enclavlow.contract.SenTransformer.internalTransform(contract.kt:79)
 	at soot.BodyTransformer.transform(BodyTransformer.java:55)
 	at soot.BodyTransformer.transform(BodyTransformer.java:59)
 	at io.github.sof3.enclavlow.aggregate.AggregateKt.computeAggregate(aggregate.kt:146)
 	at io.github.sof3.enclavlow.plugin.Main$apply$1$1.execute(Main.kt:56)
 	at io.github.sof3.enclavlow.plugin.Main$apply$1$1.execute(Main.kt:21)
 	at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:727)
 	at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:694)
 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$3.run(ExecuteActionsTaskExecuter.java:568)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:402)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:394)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)
 	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:92)
 	at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)
 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:553)
 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:536)
 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.access$300(ExecuteActionsTaskExecuter.java:109)
 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.executeWithPreviousOutputFiles(ExecuteActionsTaskExecuter.java:276)
 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.execute(ExecuteActionsTaskExecuter.java:265)
 	at org.gradle.internal.execution.steps.ExecuteStep.lambda$execute$1(ExecuteStep.java:33)
 	at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:33)
 	at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:26)
 	at org.gradle.internal.execution.steps.CleanupOutputsStep.execute(CleanupOutputsStep.java:67)
 	at org.gradle.internal.execution.steps.CleanupOutputsStep.execute(CleanupOutputsStep.java:36)
 	at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:49)
 	at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:34)
 	at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:43)
 	at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:73)
 	at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:54)
 	at org.gradle.internal.execution.steps.CatchExceptionStep.execute(CatchExceptionStep.java:34)
 	at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:44)
 	at org.gradle.internal.execution.steps.SnapshotOutputsStep.execute(SnapshotOutputsStep.java:54)
 	at org.gradle.internal.execution.steps.SnapshotOutputsStep.execute(SnapshotOutputsStep.java:38)
 	at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:49)
 	at org.gradle.internal.execution.steps.CacheStep.executeWithoutCache(CacheStep.java:159)
 	at org.gradle.internal.execution.steps.CacheStep.execute(CacheStep.java:72)
 	at org.gradle.internal.execution.steps.CacheStep.execute(CacheStep.java:43)
 	at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:44)
 	at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:33)
 	at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:38)
 	at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:24)
 	at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:92)
 	at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$0(SkipUpToDateStep.java:85)
 	at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:55)
 	at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:39)
 	at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:76)
 	at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:37)
 	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:36)
 	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:26)
 	at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:94)
 	at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:49)
 	at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:79)
 	at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:53)
 	at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:74)
 	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:78)
 	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:78)
 	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:34)
 	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:39)
 	at org.gradle.internal.execution.steps.LoadExecutionStateStep.execute(LoadExecutionStateStep.java:40)
 	at org.gradle.internal.execution.steps.LoadExecutionStateStep.execute(LoadExecutionStateStep.java:28)
 	at org.gradle.internal.execution.impl.DefaultWorkExecutor.execute(DefaultWorkExecutor.java:33)
 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:192)
 	... 30 more
 
 
 * Get more help at https://help.gradle.org
